syntax = "proto3";

option go_package = "github.com/nguyentrunghieu15/vcs-common-prj/apu/mail_sender";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";


message RequestSendStatisticServerToEmail{
    string from = 1 [(google.api.field_behavior) = REQUIRED,(validate.rules).string = {ignore_empty: false}];
    string to = 2 [(google.api.field_behavior) = REQUIRED,(validate.rules).string = {ignore_empty: false}];
    string email = 3 [(google.api.field_behavior) = REQUIRED,(validate.rules).string = {ignore_empty: false}];
}


service MailServer {
    rpc SendStatisticServerToEmail (RequestSendStatisticServerToEmail) returns (google.protobuf.Empty){
        option (google.api.http) = {
            post: "/api/v1/mail"
            body:"*"
          };
          option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
              responses: [
                {
                  key: "401",
                  value: {
                    description: "Unauthorized";
                    schema: {
                      json_schema: {ref: "#/definitions/rpcStatus"}
                    }
                  }
                },
                {
                  key: "400",
                  value: {
                    description: "Bad Request";
                    schema: {
                      json_schema: {ref: "#/definitions/rpcStatus"}
                    }
                  }
                },
                {
                  key: "404",
                  value: {
                    description: "Not found";
                    schema: {
                      json_schema: {ref: "#/definitions/rpcStatus"}
                    }
                  }
                },
                {
                  key: "500",
                  value: {
                    description: "Internal Server";
                    schema: {
                      json_schema: {ref: "#/definitions/rpcStatus"}
                    }
                  }
                }
              ],
              parameters:{
                headers:[
                  {
                    name:"Authorization",
                    type:STRING,
                    required:true
                  }
                ]
              }
            };
        }
    }